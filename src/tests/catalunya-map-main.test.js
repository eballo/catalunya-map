/**
 * @jest-environment jsdom
 */

import $ from './mocks/jquery';
import CatMap from '../app/catalunya-map';
import config from '../app/catalunya-map-config';
import {afterEach, beforeEach, describe, expect, it, jest} from "@jest/globals";

// Mock modules
jest.mock('../app/catalunya-map');
jest.mock('../app/catalunya-map-config', () => ({
    url_json: '/test.json'
}));

global.$ = $;

const mockJsonData = {
    "cat1": {
        "name": "Vall d'Aran",
        "capital": "Viella",
        "info": "",
        "url": "http://localhost:8080/mapa/vall-daran",
        "path": "m 212.87729,91.976751 c 0.91974,-0.65757 1.92798,-1.799659 2.24055,-2.537975 0.46767,-1.104702 0.7775,-1.342394 1.74983,-1.342394 1.42434,0 1.43838,-0.150134 0.20082,-2.147517 -1.57243,-2.537877 -1.70812,-3.028424 -1.39702,-5.050636 0.20348,-1.322624 0.59181,-2.163475 1.23819,-2.681046 0.75613,-0.605455 0.95026,-1.149109 0.98499,-2.758517 0.0774,-3.586178 0.64125,-6.944176 1.20168,-7.156425 0.29443,-0.111511 0.53533,-0.520796 0.53533,-0.909516 0,-0.388724 0.38708,-1.555943 0.86018,-2.593814 0.4731,-1.037876 0.87365,-2.589871 0.89013,-3.448878 0.0298,-1.554474 0.0408,-1.565219 2.33472,-2.281791 2.10591,-0.657851 2.36922,-0.868394 3.05195,-2.44036 0.83306,-1.918135 0.98115,-1.97228 3.05502,-1.117057 1.35052,0.556929 1.50171,0.55119 1.96536,-0.07463 0.62986,-0.850159 0.64067,-1.882447 0.0298,-2.84783 -0.36622,-0.578768 -0.36622,-0.976843 0,-1.770132 0.25986,-0.562896 0.47247,-1.942464 0.47247,-3.065714 0,-1.22444 0.24889,-2.392969 0.62152,-2.918043 0.49732,-0.700766 0.58242,-1.61583 0.42585,-4.579091 -0.13421,-2.539942 -0.0498,-3.856025 0.26861,-4.189436 0.66669,-0.698051 1.47078,-3.070781 1.19169,-3.516474 -0.1392,-0.222302 -1.17936,-0.272677 -2.52584,-0.122326 -1.30516,0.145738 -2.38779,0.09813 -2.51859,-0.110744 -0.12618,-0.201498 -1.48673,-0.490981 -3.02345,-0.643297 -2.11278,-0.209412 -2.90806,-0.457124 -3.26164,-1.015927 -0.25719,-0.406445 -0.83583,-0.73899 -1.28587,-0.73899 -1.25337,0 -2.19538,-0.877583 -2.49523,-2.324557 -0.42,-2.026829 -1.27284,-2.313518 -3.17887,-1.068609 -0.88454,0.57773 -1.7926,1.05042 -2.01792,1.05042 -0.22532,0 -0.89674,0.510179 -1.49204,1.133732 -1.55733,1.63124 -2.92463,1.826115 -4.37301,0.623265 -0.64643,-0.536845 -1.44827,-0.976082 -1.78187,-0.976082 -0.3336,0 -1.02,-0.494716 -1.52535,-1.099369 -0.50534,-0.604653 -2.13903,-1.702816 -3.63042,-2.440361 -1.4914,-0.737545 -3.38897,-1.912035 -4.21684,-2.609978 -0.82787,-0.697943 -1.81232,-1.268987 -2.18766,-1.268987 -1.05739,0 -3.87214,-0.86225 -4.53257,-1.388472 -0.32638,-0.260057 -1.35004,-0.848285 -2.27478,-1.307175 -0.92475,-0.458889 -1.68136,-1.006478 -1.68136,-1.216866 0,-0.210387 -0.31155,-0.383604 -0.69233,-0.384927 -0.38078,-0.0013 -1.20002,-0.263741 -1.82053,-0.583151 -1.24235,-0.6395 -2.81528,-0.440413 -3.9059,0.494378 -0.51275,0.439485 -1.17769,0.520001 -2.67522,0.323937 -2.68757,-0.351873 -3.17007,-0.57523 -3.17007,-1.467508 0,-0.544478 -0.63117,-1.045938 -2.22026,-1.763964 -1.98755,-0.898068 -2.38233,-0.955298 -3.76648,-0.546005 -2.07834,0.61457 -2.45256,0.30416 -2.13701,-1.772625 0.25761,-1.6954776 0.24933,-1.7108942 -0.91878,-1.7108942 -1.57678,0 -2.43028,-0.3574872 -2.43028,-1.0179187 0,-0.7838696 -1.36493,-0.6693123 -3.23314,0.271355 -1.38235,0.6960313 -1.85706,0.7556677 -3.24581,0.4077612 -2.03788,-0.5105267 -2.38526,-0.1933435 -2.40617,2.1970127 -0.0161,1.845544 -0.0212,1.852326 -1.66748,2.244444 -0.9082,0.216319 -1.7835,0.523804 -1.9451,0.683301 -0.16161,0.159497 -0.6097,0.289994 -0.99577,0.289994 -1.21873,0 -1.28628,0.835035 -0.14049,1.736747 1.0788,0.848998 1.09473,0.918719 0.68126,2.982568 -0.23284,1.162287 -0.30667,2.201202 -0.16406,2.3087 0.49524,0.373293 1.24833,1.945665 1.24833,2.606352 0,1.002495 -1.68872,3.245033 -2.44592,3.248068 -0.36612,0.0015 -0.77898,0.355028 -0.91747,0.78569 -0.1385,0.430662 -0.67939,1.284549 -1.20199,1.897526 l -0.95017,1.114504 1.57093,0.609038 c 1.4205,0.550713 1.57094,0.74196 1.57094,1.997024 0,1.147291 -0.20582,1.493027 -1.18684,1.993725 -0.69799,0.35624 -1.18685,0.916756 -1.18685,1.360827 0,0.415298 -0.46729,1.182741 -1.03843,1.705429 -0.57114,0.522688 -0.93239,1.119687 -0.80279,1.326665 0.12961,0.206978 1.13523,0.481476 2.23471,0.609996 1.09947,0.12852 2.17284,0.339677 2.38524,0.469239 0.50434,0.30764 0.49791,1.637077 -0.009,1.94654 -0.78309,0.477667 -0.37218,1.726568 0.79123,2.404856 1.29775,0.756609 1.38504,0.990329 0.78388,2.098959 -0.30393,0.560494 -0.2067,1.104539 0.39561,2.21368 0.92371,1.700963 0.97224,2.191924 0.33237,3.362458 -0.25641,0.469072 -0.42244,1.576332 -0.36895,2.460574 0.0814,1.345962 -0.0725,1.729751 -0.94534,2.357283 -1.01508,0.7298 -1.02997,0.800676 -0.56432,2.687321 0.26304,1.065761 0.70248,2.20131 0.97653,2.523438 0.27405,0.322127 0.77395,1.244583 1.1109,2.049902 0.49921,1.193141 0.81778,1.466489 1.72076,1.476485 1.5702,0.01738 2.63472,1.583665 2.55153,3.754223 -0.0358,0.935212 0.1362,2.018623 0.38232,2.407577 0.34726,0.548808 0.30006,0.988561 -0.21077,1.963522 -0.69672,1.329731 -0.56115,2.014308 0.39888,2.014308 0.32037,0 0.68496,0.263559 0.8102,0.585687 0.12525,0.322127 0.55666,0.585686 0.9587,0.585686 0.52218,0 0.80517,0.390356 0.99074,1.366602 0.18144,0.95456 0.47228,1.366602 0.96463,1.366602 0.38768,0 0.80735,0.263559 0.93259,0.585686 0.12525,0.322128 0.47855,0.585687 0.78512,0.585687 0.30657,0 0.77902,0.263559 1.04989,0.585686 0.6166,0.733272 1.18684,0.755153 1.18684,0.04554 0,-0.536051 1.14358,-1.006115 2.47259,-1.016353 0.38078,-0.0031 0.69233,0.258229 0.69233,0.580357 0,0.390457 0.39561,0.585686 1.18684,0.585686 0.65276,0 1.50052,0.307485 1.88389,0.683301 0.55621,0.545227 1.29566,0.667749 3.65944,0.60633 3.53979,-0.09197 6.58787,-0.611886 7.21478,-1.230625 0.87226,-0.860889 1.80427,-0.436836 3.303,1.502825 0.82968,1.073758 1.6226,1.952288 1.76204,1.952288 0.13945,0 0.81651,-0.277186 1.50459,-0.615971 0.78808,-0.388021 1.6802,-0.522936 2.41074,-0.364574 1.01026,0.218996 1.24054,0.09711 1.787,-0.94586 0.41251,-0.787303 0.92862,-1.199154 1.50728,-1.202801 0.57311,-0.0035 1.4318,-0.677623 2.46243,-1.932855 1.72091,-2.095938 1.96048,-2.171003 4.9257,-1.543366 2.13866,0.452685 2.4841,1.05757 1.40636,2.462632 -0.50012,0.65201 -0.47391,0.856578 0.2251,1.75706 0.43511,0.560521 1.26054,1.289587 1.83428,1.620145 0.57374,0.330554 1.23472,1.128216 1.46884,1.772584 0.23413,0.644364 0.82625,1.559925 1.31582,2.034577 0.48957,0.474652 0.89045,1.170491 0.89084,1.546306 7.9e-4,0.64725 1.67248,1.937268 2.61033,2.014203 0.23934,0.01964 1.18767,-0.502312 2.10741,-1.159881 z "
    },
    "cat2": {
        "name": "Pallars Sobir√†",
        "capital": "Sort",
        "info": "",
        "url": "http://localhost:8080/mapa/pallars-sobira",
        "path": "m 257.08714,195.16804 c 0.35542,-0.22311 0.34255,-0.99129 -0.0544,-3.24734 -0.65826,-3.74123 -1.46496,-5.28207 -3.1235,-5.96602 -1.46092,-0.60246 -3.02407,-2.33908 -3.02407,-3.35969 0,-0.36726 0.37378,-1.0016 0.83063,-1.40965 0.84468,-0.75446 1.75421,-0.83367 6.68604,-0.58226 1.42266,0.0725 2.58672,-0.10469 3.36272,-0.51194 0.65277,-0.34257 1.41395,-0.62394 1.69152,-0.62526 0.37888,-0.002 0.34265,-0.31166 -0.14538,-1.24309 -0.61145,-1.16701 -0.60756,-1.27135 0.0655,-1.75706 0.39353,-0.28401 0.95903,-0.51638 1.25666,-0.51638 0.29764,0 0.43478,-0.16988 0.30477,-0.37751 -0.13002,-0.20762 0.56919,-1.35365 1.55379,-2.54673 0.98461,-1.19307 1.89732,-2.59046 2.02824,-3.1053 0.15781,-0.62058 1.08517,-1.42504 2.7514,-2.38679 1.96492,-1.13415 2.80637,-1.92909 3.85619,-3.64304 1.94597,-3.17701 2.22752,-4.09725 2.59717,-8.48868 0.24883,-2.9562 0.54821,-4.29762 1.18671,-5.31726 0.46966,-0.75002 0.85392,-1.63766 0.85392,-1.97254 0,-0.33488 0.44507,-0.9544 0.98903,-1.37671 0.54397,-0.42231 0.99459,-1.18181 1.00139,-1.68779 0.0246,-1.83646 1.39174,-6.96913 2.06204,-7.74178 0.913,-1.05241 1.57192,-0.99898 3.07507,0.24935 1.17682,0.97732 1.34176,1.01013 2.67902,0.53287 0.78375,-0.27971 2.14688,-0.54918 3.02918,-0.59882 0.8823,-0.0496 1.93141,-0.22631 2.33134,-0.39261 0.39993,-0.16629 1.32477,-0.12132 2.05521,0.0999 1.08635,0.32907 1.43004,0.28577 1.88834,-0.23787 0.80776,-0.92294 2.64816,-4.14874 2.64816,-4.64162 0,-0.99481 2.22602,-3.63952 4.03951,-4.79931 l 1.96886,-1.25914 -0.26556,-1.74782 c -0.39836,-2.62182 -0.2818,-7.81864 0.19509,-8.69811 0.42932,-0.79173 1.75293,-1.0532 2.14687,-0.42409 0.30234,0.48283 3.29199,1.99273 3.94565,1.99273 0.29329,0 0.7558,-0.53029 1.02781,-1.17842 0.38648,-0.9209 0.86882,-1.27142 2.20723,-1.60404 1.00477,-0.24971 2.29688,-0.98562 3.1261,-1.78046 1.24421,-1.19261 1.38303,-1.51479 1.15946,-2.69098 -0.20613,-1.08446 -0.1305,-1.33617 0.40145,-1.33617 1.19013,0 4.30096,-3.66471 4.80998,-5.6664 0.19884,-0.78188 0.0252,-1.08478 -0.93314,-1.62761 -1.08303,-0.61347 -1.19593,-0.88472 -1.40816,-3.383142 -0.12873,-1.515429 -0.059,-3.032915 0.15777,-3.432635 0.21367,-0.394042 0.54875,-1.553556 0.74462,-2.576696 0.42368,-2.213134 -0.30137,-4.839969 -2.03614,-7.376913 -0.88623,-1.296022 -1.11107,-2.063049 -1.11107,-3.790297 0,-1.191001 -0.16605,-2.266747 -0.369,-2.390542 -0.20295,-0.123794 -0.57932,-1.232327 -0.83638,-2.463405 -0.57648,-2.760828 -1.19818,-3.984035 -3.05694,-6.014637 -1.37791,-1.5053 -2.26423,-3.247924 -2.74623,-5.39944 -0.33963,-1.516006 -0.83806,-1.913359 -3.23027,-2.57524 -1.22267,-0.338288 -2.53458,-0.970951 -2.91536,-1.405917 -0.91885,-1.049608 -0.87666,-2.710475 0.1,-3.935883 1.15222,-1.445716 0.66823,-2.234858 -1.37067,-2.234858 -1.40751,0 -1.85053,-0.202496 -2.72672,-1.246345 -0.92513,-1.102149 -1.1034,-1.174903 -1.54093,-0.628844 -0.45,0.561619 -1.19552,0.939387 -4.30238,2.180085 -0.77064,0.307751 -1.29122,0.285144 -2.01935,-0.08769 -0.53956,-0.276284 -1.55632,-0.585667 -2.25945,-0.687517 -1.03345,-0.149702 -1.33926,-0.02729 -1.59589,0.638921 -0.1746,0.453263 -0.78242,1.069706 -1.3507,1.369874 -0.86794,0.458452 -1.19147,0.462188 -2.02227,0.02335 -0.54397,-0.28733 -0.98904,-0.844138 -0.98904,-1.237352 0,-0.873774 -0.91188,-0.930531 -1.74467,-0.108594 -0.43627,0.430577 -1.21436,0.572059 -2.68417,0.488072 -1.98329,-0.113327 -2.08072,-0.171224 -2.33056,-1.384852 -0.1434,-0.69662 -0.48326,-1.531223 -0.75524,-1.854674 -0.71736,-0.853091 -2.88282,-0.728426 -3.99654,0.230081 -1.68868,1.453338 -3.04066,1.930606 -5.21458,1.840824 -1.75514,-0.07249 -2.33453,0.08777 -3.50624,0.969831 -2.41883,1.82088 -5.10239,1.157078 -8.15924,-2.018264 -1.73253,-1.799682 -3.65351,-5.617362 -3.65351,-7.260834 0,-0.732534 -0.19514,-1.45091 -0.43364,-1.596391 -0.2385,-0.145481 -0.35935,-0.76408 -0.26855,-1.374665 0.10212,-0.686733 -0.0343,-1.185655 -0.35759,-1.308109 -0.28747,-0.108875 -0.52268,-0.730587 -0.52268,-1.381582 0,-0.984829 -0.15743,-1.183627 -0.93735,-1.183627 -0.51555,0 -1.83173,-0.702824 -2.92484,-1.561831 -1.09312,-0.859007 -2.33248,-1.561831 -2.75413,-1.561831 -0.8111,0 -1.34854,-0.82822 -2.09031,-3.221275 -0.24962,-0.805319 -0.53627,-1.464216 -0.637,-1.464216 -0.24578,0 -2.51255,1.564658 -3.5803,2.471332 -0.67044,0.569301 -1.31825,0.693674 -2.96711,0.569658 -1.16017,-0.08726 -2.35323,-0.236137 -2.65125,-0.330836 -0.33348,-0.105969 -0.71381,0.309182 -0.98904,1.079598 -0.24595,0.688477 -0.64438,1.445355 -0.88538,1.68195 -0.28783,0.28256 -0.37137,1.691288 -0.24343,4.10529 0.15771,2.975788 0.0717,3.860481 -0.45193,4.649248 -0.38502,0.579947 -0.64671,1.780079 -0.64671,2.965829 0,1.095432 -0.19452,2.350418 -0.43226,2.788859 -0.31261,0.576503 -0.31261,0.91526 0,1.223796 0.55115,0.543966 0.55039,1.771752 -0.002,3.335843 -0.48741,1.379956 -1.14741,1.520591 -3.17918,0.677433 l -1.33066,-0.552205 -0.79174,1.625963 c -0.6943,1.425846 -1.06949,1.715031 -3.04845,2.349618 -2.13133,0.683449 -2.24461,0.783414 -2.03878,1.799155 0.14368,0.709036 -0.13207,1.805734 -0.80929,3.218597 -0.56498,1.178706 -1.02724,2.526995 -1.02724,2.996208 0,0.469209 -0.26704,0.954243 -0.59342,1.077854 -0.36546,0.138414 -0.59342,0.731523 -0.59342,1.543975 0,0.725572 -0.21672,2.118952 -0.4816,3.096392 -0.37839,1.396312 -0.37839,1.940286 0,2.538283 0.65997,1.04301 0.64558,1.08812 -0.76069,2.384654 -1.4613,1.347262 -2.18726,4.063973 -1.34274,5.024831 0.85386,0.971486 2.18941,3.820175 2.18941,4.669936 0,0.636543 -0.25817,0.798169 -1.28574,0.80492 -1.05874,0.007 -1.39052,0.231011 -1.87917,1.268988 -0.32638,0.693296 -1.44025,1.875508 -2.47526,2.627139 l -1.88183,1.366602 2.27745,0.509512 c 1.2526,0.280232 3.02458,0.646297 3.93775,0.813476 2.28793,0.418863 2.7077,0.873399 3.28465,3.556698 0.40056,1.862904 0.40235,2.451254 0.009,2.919174 -0.27103,0.32232 -0.38437,0.86488 -0.25186,1.2057 0.21981,0.56534 0.29586,0.56546 0.86739,0.002 0.34455,-0.34005 0.76694,-0.53258 0.93866,-0.42784 0.36422,0.22217 1.04265,1.90311 1.3727,3.40116 0.33317,1.51217 1.27968,2.27244 2.82912,2.27244 0.74602,0 1.35639,0.17335 1.35639,0.38522 0,0.21187 0.6256,0.6432 1.39022,0.95851 1.61902,0.66766 2.03977,1.46668 1.52674,2.89938 -0.26704,0.74571 -0.17163,1.61746 0.34738,3.17405 0.43656,1.30932 0.69231,3.13609 0.65599,4.6855 -0.0328,1.39673 0.15064,3.30026 0.4075,4.23007 0.44273,1.60263 0.41339,1.73963 -0.56403,2.63366 -1.52192,1.39209 -2.15894,3.14179 -1.71786,4.71843 0.23392,0.83615 0.20748,2.44336 -0.0735,4.46898 -0.37865,2.72948 -0.3541,3.25564 0.17903,3.83707 0.33983,0.37061 0.61786,0.86779 0.61786,1.10485 0,0.23706 0.31538,0.52981 0.70084,0.65055 0.38547,0.12075 1.2756,0.73766 1.97807,1.37091 1.63178,1.47097 1.70848,3.11702 0.22592,4.84836 -0.57823,0.67526 -1.45958,2.13561 -1.95856,3.24522 -0.86977,1.93418 -2.01801,2.83039 -2.9208,2.27972 -0.21959,-0.1341 -0.39921,-0.0576 -0.39921,0.16984 0,0.22743 -0.41748,0.4135 -0.92772,0.4135 -1.23657,0 -2.02777,0.94768 -2.83249,3.39269 -0.36676,1.11435 -0.89143,2.32924 -1.16595,2.69976 -0.35907,0.48466 -0.39891,1.11384 -0.14199,2.24241 0.41945,1.84251 -0.0472,3.24532 -1.53327,4.60929 -0.54956,0.50441 -1.16262,1.33501 -1.36237,1.84578 -0.32167,0.82258 -0.54628,0.90444 -1.96608,0.71649 -1.33269,-0.17642 -1.89798,-0.0157 -3.35319,0.95365 -1.68476,1.12221 -2.29424,2.42833 -1.28769,2.75947 0.26117,0.0859 0.43754,0.81013 0.40504,1.66318 -0.074,1.94281 0.46199,2.57513 1.93617,2.28413 0.84508,-0.16681 1.15234,-0.0778 1.15234,0.33369 0,1.24755 1.6501,3.87621 2.67454,4.26062 0.58182,0.21833 1.30419,0.59873 1.60526,0.84534 0.30107,0.2466 0.80746,0.48604 1.12532,0.53208 0.31786,0.046 1.00351,0.53694 1.52366,1.09088 0.62434,0.6649 1.36214,1.00715 2.1711,1.00715 1.34453,0 3.55978,0.97354 3.55978,1.56442 0,0.20515 0.48957,0.48849 1.08794,0.62965 0.59836,0.14116 1.26596,0.35901 1.48355,0.48413 0.21759,0.12511 0.96101,0.24779 1.65205,0.27261 0.69104,0.0248 1.74439,0.36069 2.34076,0.74635 0.59639,0.38567 1.81125,0.74116 2.69971,0.78998 0.88846,0.0488 2.3928,0.29462 3.34297,0.54624 1.49219,0.39513 1.79225,0.37021 2.20203,-0.18289 0.68494,-0.9245 1.87238,-0.54235 2.79053,0.89807 0.58142,0.91215 1.09634,1.25366 1.90676,1.26464 0.70317,0.01 1.50095,0.43038 2.17588,1.14782 0.5861,0.62303 1.42169,1.21762 1.85686,1.32131 1.27404,0.30357 3.12731,0.29076 3.63047,-0.0251 z "
    }
};


describe('Catalunya map loader', () => {

    beforeEach(() => {

        // Append necessary DOM elements
        document.body.innerHTML = `
            <div id="map"></div>
            <div id="text"></div>
            <div id="contentText"></div>
            <div id="legend"></div>
        `;

        // Mock jQuery methods on these elements
        $('#map').show = jest.fn();
        $('#text').fadeIn = jest.fn();
        $('#contentText').toggle = jest.fn();
        $('#legend').fadeIn = jest.fn();

        // Setup or reset window.location mock
        delete window.location;
        window.location = {origin: 'http://localhost'};

        jest.clearAllMocks();
    });

    afterEach(() => {
        // Reset module cache to ensure a fresh module is used for each test
        jest.resetModules();
    });


    it('should successfully fetch JSON and initialize the map on success', async () => {

        // Mock jQuery AJAX
        $.ajax = jest.fn().mockImplementation(({success}) => {
            success(mockJsonData);
        });

        await require('../app/catalunya-map-main');

        expect($.ajax).toHaveBeenCalledWith({
            url: 'http://localhost/test.json',
            dataType: 'json',
            async: true,
            success: expect.any(Function),
            error: expect.any(Function)
        });

        expect(CatMap).toHaveBeenCalledTimes(1);
        expect(CatMap).toHaveBeenCalledWith(config, mockJsonData);

    });

    it('should log error when AJAX request fails', async () => {
        const consoleSpy = jest.spyOn(console, 'log');
        $.ajax = jest.fn().mockImplementation(({error}) => {
            error({statusText: "Not Found"}, 'error', '404 Not Found');
        });

        await require('../app/catalunya-map-main');

        expect($.ajax).toHaveBeenCalledWith({
            url: 'http://localhost/test.json',
            dataType: 'json',
            async: true,
            success: expect.any(Function),
            error: expect.any(Function)
        });

        expect(CatMap).not.toHaveBeenCalledTimes(1);
        expect(CatMap).not.toHaveBeenCalledWith(config, mockJsonData);

        expect(consoleSpy).toHaveBeenCalledWith("Error - url: http://localhost/test.json");
        consoleSpy.mockRestore();
    });
});

